package st.gravel.support.compiler.ast;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.ast.MessageNode;
import st.gravel.support.compiler.ast.MessageNode.MessageNode_Factory;
import st.gravel.support.compiler.ast.Expression;
import st.gravel.support.compiler.ast.NodeVisitor;
import st.gravel.support.compiler.ast.Node;
import st.gravel.support.compiler.ast.SourcePrinter;
import st.gravel.support.compiler.ast.SourcePosition;

public class UnaryMessageNode extends MessageNode implements Cloneable {

	public static UnaryMessageNode_Factory factory = new UnaryMessageNode_Factory();

	public static class UnaryMessageNode_Factory extends MessageNode_Factory {

		public UnaryMessageNode basicNew() {
			UnaryMessageNode newInstance = new UnaryMessageNode();
			newInstance.initialize();
			return newInstance;
		}

		@Override
		public UnaryMessageNode receiver_selector_(final Expression _aNode, final String _aString) {
			return ((UnaryMessageNode) this.basicNew().initializeReceiver_selector_(_aNode, _aString));
		}

		public UnaryMessageNode receiver_selector_arguments_(final Expression _aNode, final String _aString, final Expression[] _anArray) {
			st.gravel.support.jvm.ObjectExtensions.assert_(this, _anArray.length == 0);
			return ((UnaryMessageNode) this.receiver_selector_(_aNode, _aString));
		}
	}

	static public UnaryMessageNode _receiver_selector_(Object receiver, final Expression _aNode, final String _aString) {
		return factory.receiver_selector_(_aNode, _aString);
	}

	static public UnaryMessageNode _receiver_selector_arguments_(Object receiver, final Expression _aNode, final String _aString, final Expression[] _anArray) {
		return factory.receiver_selector_arguments_(_aNode, _aString, _anArray);
	}

	@Override
	public <X> X accept_(final NodeVisitor<X> _visitor) {
		return _visitor.visitUnaryMessageNode_(this);
	}

	@Override
	public UnaryMessageNode allNodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		this.nodesDo_(new st.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				return _each.withAllNodesDo_(_aBlock);
			}
		});
		return this;
	}

	@Override
	public UnaryMessageNode allNodesDo_pruneWhere_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock, final st.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		this.nodesDo_(new st.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				if (!_pruneBlock.value_(_each)) {
					return _each.withAllNodesDo_pruneWhere_(_aBlock, _pruneBlock);
				}
				return UnaryMessageNode.this;
			}
		});
		return this;
	}

	@Override
	public Expression argument() {
		return null;
	}

	@Override
	public Expression[] arguments() {
		return new Expression[] {};
	}

	public UnaryMessageNode copy() {
		try {
			UnaryMessageNode _temp1 = (UnaryMessageNode) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public UnaryMessageNode_Factory factory() {
		return factory;
	}

	@Override
	public UnaryMessageNode initializeReceiver_selector_(final Expression _anIntegerLiteralNode, final String _aString) {
		_receiver = _anIntegerLiteralNode;
		_selector = _aString;
		this.initialize();
		return this;
	}

	@Override
	public UnaryMessageNode innerSourceOn_(final StringBuilder _aStream) {
		_receiver.sourceOn_(_aStream);
		this.sourceSendOn_(_aStream);
		return this;
	}

	@Override
	public UnaryMessageNode innerSourceSendOn_(final StringBuilder _aStream) {
		_aStream.append(_selector);
		return this;
	}

	@Override
	public boolean isTraitRequirementMessage() {
		return _receiver.isSelfNode() && st.gravel.support.jvm.StringExtensions.equals_(_selector, "traitRequirement");
	}

	@Override
	public UnaryMessageNode localVarNamesDo_(final st.gravel.support.jvm.Block1<Object, String> _aBlock) {
		return this;
	}

	@Override
	public UnaryMessageNode nodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		_aBlock.value_(_receiver);
		return this;
	}

	@Override
	public int numArgs() {
		return 0;
	}

	@Override
	public int precedence() {
		return 1;
	}

	@Override
	public UnaryMessageNode prettySourceOn_(final StringBuilder _aStream) {
		SourcePrinter.factory.on_(_aStream).visit_(this);
		return this;
	}

	@Override
	public UnaryMessageNode printOn_(final StringBuilder _aStream) {
		final String _title;
		_title = this.factory().toString();
		_aStream.append(st.gravel.support.jvm.CharacterExtensions.isVowel(_title.charAt(0)) ? "an " : "a ");
		_aStream.append(_title);
		_aStream.append('[');
		this.sourceOn_(_aStream);
		_aStream.append(']');
		return this;
	}

	@Override
	public UnaryMessageNode pvtSetSourcePosition_(final SourcePosition _aSourcePosition) {
		_sourcePosition = _aSourcePosition;
		return this;
	}

	@Override
	public UnaryMessageNode sourceOn_(final StringBuilder _aStream) {
		if (!this.needsBrackets()) {
			return UnaryMessageNode.this.innerSourceOn_(_aStream);
		}
		_aStream.append('(');
		this.innerSourceOn_(_aStream);
		_aStream.append(')');
		return this;
	}

	@Override
	public UnaryMessageNode sourceSendOn_(final StringBuilder _aStream) {
		_aStream.append(' ');
		this.innerSourceSendOn_(_aStream);
		return this;
	}

	@Override
	public UnaryMessageNode withAllNodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		_aBlock.value_(this);
		this.allNodesDo_(_aBlock);
		return this;
	}

	@Override
	public UnaryMessageNode withAllNodesDo_pruneWhere_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock, final st.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		_aBlock.value_(this);
		this.allNodesDo_pruneWhere_(_aBlock, _pruneBlock);
		return this;
	}

	@Override
	public UnaryMessageNode withArguments_(final Expression[] _anArray) {
		st.gravel.support.jvm.ObjectExtensions.assert_(this, _anArray.length == 0);
		return this;
	}

	@Override
	public UnaryMessageNode withSourcePosition_(final SourcePosition _aSourcePosition) {
		if (_sourcePosition == _aSourcePosition) {
			return UnaryMessageNode.this;
		}
		return this.copy().pvtSetSourcePosition_(_aSourcePosition);
	}
}
