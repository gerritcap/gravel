package st.gravel.support.compiler.ast;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.ast.MethodNode;
import st.gravel.support.compiler.jvm.BlockSendArgument;

public class BlockInliner extends Object implements Cloneable {

	public static BlockInliner_Factory factory = new BlockInliner_Factory();

	BlockSendArgument[] _astConstants;

	MethodNode _methodNode;

	public static class BlockInliner_Factory extends st.gravel.support.jvm.SmalltalkFactory {

		public BlockInliner basicNew() {
			BlockInliner newInstance = new BlockInliner();
			newInstance.initialize();
			return newInstance;
		}

		public BlockInliner methodNode_astConstants_(final MethodNode _aMethodNode, final BlockSendArgument[] _anArray) {
			return this.basicNew().initializeMethodNode_astConstants_(_aMethodNode, _anArray);
		}
	}

	static public BlockInliner _methodNode_astConstants_(Object receiver, final MethodNode _aMethodNode, final BlockSendArgument[] _anArray) {
		return factory.methodNode_astConstants_(_aMethodNode, _anArray);
	}

	public BlockSendArgument[] astConstants() {
		return _astConstants;
	}

	public java.lang.invoke.MethodHandle build() {
		return null;
	}

	public BlockInliner copy() {
		try {
			BlockInliner _temp1 = (BlockInliner) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public BlockInliner_Factory factory() {
		return factory;
	}

	public BlockInliner initialize() {
		return this;
	}

	public BlockInliner initializeMethodNode_astConstants_(final MethodNode _aMethodNode, final BlockSendArgument[] _anArray) {
		_methodNode = _aMethodNode;
		_astConstants = _anArray;
		this.initialize();
		return this;
	}

	public MethodNode methodNode() {
		return _methodNode;
	}

	public BlockInliner postCopy() {
		return this;
	}
}
