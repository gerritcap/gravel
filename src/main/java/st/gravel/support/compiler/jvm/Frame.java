package st.gravel.support.compiler.jvm;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.jvm.JVMInstruction;
import st.gravel.support.compiler.jvm.JVMInstruction.JVMInstruction_Factory;
import st.gravel.support.compiler.jvm.JVMStack;
import st.gravel.support.compiler.jvm.JVMInstructionVisitor;
import st.gravel.support.compiler.jvm.JVMType;
import st.gravel.support.compiler.jvm.JVMBottomType;

public class Frame extends JVMInstruction implements Cloneable {

	public static Frame_Factory factory = new Frame_Factory();

	JVMStack _endStack;

	JVMInstruction[] _instructions;

	public static class Frame_Factory extends JVMInstruction_Factory {

		public Frame basicNew() {
			Frame newInstance = new Frame();
			newInstance.initialize();
			return newInstance;
		}

		public Frame empty() {
			return this.instructions_endStack_(new JVMInstruction[] {}, JVMStack.factory.basicNew());
		}

		public Frame instructions_endStack_(final JVMInstruction[] _anArray, final JVMStack _aJVMStack) {
			return this.basicNew().initializeInstructions_endStack_(_anArray, _aJVMStack);
		}
	}

	static public Frame _empty(Object receiver) {
		return factory.empty();
	}

	static public Frame _instructions_endStack_(Object receiver, final JVMInstruction[] _anArray, final JVMStack _aJVMStack) {
		return factory.instructions_endStack_(_anArray, _aJVMStack);
	}

	@Override
	public <X> X accept_(final JVMInstructionVisitor<X> _visitor) {
		return _visitor.visitFrame_(this);
	}

	@Override
	public Frame asFrame() {
		return this;
	}

	public Frame copy() {
		try {
			Frame _temp1 = (Frame) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	@Override
	public JVMInstruction effectStack_(final JVMStack _aJVMStack) {
		_endStack.elementsDo_(new st.gravel.support.jvm.Block1<Object, JVMType>() {

			@Override
			public Object value_(final JVMType _each) {
				return _aJVMStack.push_(_each);
			}
		});
		return this;
	}

	public JVMStack endStack() {
		return _endStack;
	}

	public Frame_Factory factory() {
		return factory;
	}

	public Frame initializeInstructions_endStack_(final JVMInstruction[] _anArray, final JVMStack _aJVMStack) {
		_instructions = _anArray;
		_endStack = _aJVMStack;
		this.initialize();
		return this;
	}

	public JVMInstruction[] instructions() {
		return _instructions;
	}

	@Override
	public Frame printOn_(final StringBuilder _aStream) {
		final String _title;
		_title = this.factory().toString();
		_aStream.append(st.gravel.support.jvm.CharacterExtensions.isVowel(_title.charAt(0)) ? "an " : "a ");
		_aStream.append(_title);
		_aStream.append('[');
		this.sourceOn_(_aStream);
		_aStream.append(']');
		return this;
	}

	@Override
	public Frame sourceOn_(final StringBuilder _aStream) {
		return this;
	}

	@Override
	public JVMType type() {
		if (_endStack.isEmpty()) {
			return JVMBottomType.factory.basicNew();
		}
		return _endStack.peek();
	}

	public Frame withInstruction_(final JVMInstruction _anInstruction) {
		final JVMStack _stackCopy;
		_stackCopy = _endStack.copy();
		return Frame.factory.instructions_endStack_(st.gravel.support.jvm.ArrayExtensions.copyWith_(_instructions, _anInstruction.effectStack_(_stackCopy)), _stackCopy);
	}

	@Override
	public Frame withReturnType_(final JVMType _aJVMType) {
		if (_endStack.isEmpty()) {
			return Frame.this;
		}
		st.gravel.support.jvm.ObjectExtensions.assert_(this, st.gravel.support.jvm.IntegerExtensions.equals_(_endStack.size(), 1));
		if (st.gravel.support.jvm.ObjectExtensions.equals_(_endStack.peek(), _aJVMType)) {
			return Frame.this;
		}
		if (_instructions[_instructions.length - 1].isCast()) {
			throw new RuntimeException("niy");
		}
		return this.withInstruction_(_endStack.peek().newCastInstructionTo_(_aJVMType));
	}
}
