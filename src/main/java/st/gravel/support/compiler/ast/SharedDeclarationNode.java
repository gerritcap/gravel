package st.gravel.support.compiler.ast;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.ast.Node;
import st.gravel.support.compiler.ast.Node.Node_Factory;
import st.gravel.support.compiler.ast.Expression;
import st.gravel.support.compiler.ast.NodeVisitor;
import st.gravel.support.compiler.ast.SourcePrinter;
import st.gravel.support.compiler.ast.SourcePosition;

public class SharedDeclarationNode extends Node implements Cloneable {

	public static SharedDeclarationNode_Factory factory = new SharedDeclarationNode_Factory();

	Expression _initializer;

	String _name;

	public static class SharedDeclarationNode_Factory extends Node_Factory {

		public SharedDeclarationNode basicNew() {
			SharedDeclarationNode newInstance = new SharedDeclarationNode();
			newInstance.initialize();
			return newInstance;
		}

		public SharedDeclarationNode name_initializer_(final String _aString, final Expression _anUndefinedObject) {
			return this.basicNew().initializeName_initializer_(_aString, _anUndefinedObject);
		}
	}

	static public SharedDeclarationNode _name_initializer_(Object receiver, final String _aString, final Expression _anUndefinedObject) {
		return factory.name_initializer_(_aString, _anUndefinedObject);
	}

	@Override
	public <X> X accept_(final NodeVisitor<X> _visitor) {
		return _visitor.visitSharedDeclarationNode_(this);
	}

	@Override
	public SharedDeclarationNode allNodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		this.nodesDo_(new st.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				return _each.withAllNodesDo_(_aBlock);
			}
		});
		return this;
	}

	@Override
	public SharedDeclarationNode allNodesDo_pruneWhere_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock, final st.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		this.nodesDo_(new st.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				if (!_pruneBlock.value_(_each)) {
					return _each.withAllNodesDo_pruneWhere_(_aBlock, _pruneBlock);
				}
				return SharedDeclarationNode.this;
			}
		});
		return this;
	}

	public SharedDeclarationNode copy() {
		try {
			SharedDeclarationNode _temp1 = (SharedDeclarationNode) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public SharedDeclarationNode_Factory factory() {
		return factory;
	}

	public SharedDeclarationNode initializeName_initializer_(final String _aString, final Expression _anUndefinedObject) {
		_name = _aString;
		_initializer = _anUndefinedObject;
		this.initialize();
		return this;
	}

	public Expression initializer() {
		return _initializer;
	}

	@Override
	public SharedDeclarationNode localVarNamesDo_(final st.gravel.support.jvm.Block1<Object, String> _aBlock) {
		return this;
	}

	public String name() {
		return _name;
	}

	@Override
	public SharedDeclarationNode nodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		if (_initializer != null) {
			_aBlock.value_(_initializer);
		}
		return this;
	}

	@Override
	public SharedDeclarationNode prettySourceOn_(final StringBuilder _aStream) {
		SourcePrinter.factory.on_(_aStream).visit_(this);
		return this;
	}

	@Override
	public SharedDeclarationNode printOn_(final StringBuilder _aStream) {
		final String _title;
		_title = this.factory().toString();
		_aStream.append(st.gravel.support.jvm.CharacterExtensions.isVowel(_title.charAt(0)) ? "an " : "a ");
		_aStream.append(_title);
		_aStream.append('[');
		this.sourceOn_(_aStream);
		_aStream.append(']');
		return this;
	}

	@Override
	public SharedDeclarationNode pvtSetSourcePosition_(final SourcePosition _aSourcePosition) {
		_sourcePosition = _aSourcePosition;
		return this;
	}

	@Override
	public SharedDeclarationNode sourceOn_(final StringBuilder _aStream) {
		_aStream.append(_name);
		return this;
	}

	@Override
	public SharedDeclarationNode withAllNodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		_aBlock.value_(this);
		this.allNodesDo_(_aBlock);
		return this;
	}

	@Override
	public SharedDeclarationNode withAllNodesDo_pruneWhere_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock, final st.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		_aBlock.value_(this);
		this.allNodesDo_pruneWhere_(_aBlock, _pruneBlock);
		return this;
	}

	@Override
	public SharedDeclarationNode withSourcePosition_(final SourcePosition _aSourcePosition) {
		if (_sourcePosition == _aSourcePosition) {
			return SharedDeclarationNode.this;
		}
		return this.copy().pvtSetSourcePosition_(_aSourcePosition);
	}
}
