package st.gravel.support.compiler.ast;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.ast.StateAccessNode;
import st.gravel.support.compiler.ast.StateAccessNode.StateAccessNode_Factory;
import st.gravel.support.compiler.ast.AbsoluteReference;
import st.gravel.support.compiler.ast.NodeVisitor;
import st.gravel.support.compiler.ast.Node;
import st.gravel.support.compiler.ast.SourcePrinter;
import st.gravel.support.compiler.ast.SourcePosition;

public class GlobalReadNode extends StateAccessNode implements Cloneable {

	public static GlobalReadNode_Factory factory = new GlobalReadNode_Factory();

	String _name;

	AbsoluteReference _namespace;

	public static class GlobalReadNode_Factory extends StateAccessNode_Factory {

		public GlobalReadNode basicNew() {
			GlobalReadNode newInstance = new GlobalReadNode();
			newInstance.initialize();
			return newInstance;
		}

		public GlobalReadNode namespace_name_(final AbsoluteReference _aReference, final String _aString) {
			return this.basicNew().initializeNamespace_name_(_aReference, _aString);
		}
	}

	static public GlobalReadNode _namespace_name_(Object receiver, final AbsoluteReference _aReference, final String _aString) {
		return factory.namespace_name_(_aReference, _aString);
	}

	@Override
	public <X> X accept_(final NodeVisitor<X> _visitor) {
		return _visitor.visitGlobalReadNode_(this);
	}

	@Override
	public GlobalReadNode allNodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		this.nodesDo_(new st.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				return _each.withAllNodesDo_(_aBlock);
			}
		});
		return this;
	}

	@Override
	public GlobalReadNode allNodesDo_pruneWhere_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock, final st.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		this.nodesDo_(new st.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				if (!_pruneBlock.value_(_each)) {
					return _each.withAllNodesDo_pruneWhere_(_aBlock, _pruneBlock);
				}
				return GlobalReadNode.this;
			}
		});
		return this;
	}

	public GlobalReadNode copy() {
		try {
			GlobalReadNode _temp1 = (GlobalReadNode) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public GlobalReadNode_Factory factory() {
		return factory;
	}

	@Override
	public AbsoluteReference globalNamespace() {
		return _namespace;
	}

	@Override
	public String globalVarName() {
		return _name;
	}

	public GlobalReadNode initializeNamespace_name_(final AbsoluteReference _aReference, final String _aString) {
		_namespace = _aReference;
		_name = _aString;
		this.initialize();
		return this;
	}

	@Override
	public GlobalReadNode innerSourceOn_(final StringBuilder _aStream) {
		_aStream.append("{");
		_aStream.append(_name);
		_aStream.append("}");
		return this;
	}

	@Override
	public GlobalReadNode localVarNamesDo_(final st.gravel.support.jvm.Block1<Object, String> _aBlock) {
		return this;
	}

	@Override
	public String name() {
		return _name;
	}

	public AbsoluteReference namespace() {
		return _namespace;
	}

	@Override
	public GlobalReadNode nodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		return this;
	}

	@Override
	public GlobalReadNode prettySourceOn_(final StringBuilder _aStream) {
		SourcePrinter.factory.on_(_aStream).visit_(this);
		return this;
	}

	@Override
	public GlobalReadNode printOn_(final StringBuilder _aStream) {
		final String _title;
		_title = this.factory().toString();
		_aStream.append(st.gravel.support.jvm.CharacterExtensions.isVowel(_title.charAt(0)) ? "an " : "a ");
		_aStream.append(_title);
		_aStream.append('[');
		this.sourceOn_(_aStream);
		_aStream.append(']');
		return this;
	}

	@Override
	public GlobalReadNode pvtSetSourcePosition_(final SourcePosition _aSourcePosition) {
		_sourcePosition = _aSourcePosition;
		return this;
	}

	@Override
	public boolean referencesVariable_(final String _aString) {
		return st.gravel.support.jvm.StringExtensions.equals_(_name, _aString);
	}

	@Override
	public GlobalReadNode sourceOn_(final StringBuilder _aStream) {
		this.innerSourceOn_(_aStream);
		return this;
	}

	@Override
	public GlobalReadNode withAllNodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		_aBlock.value_(this);
		this.allNodesDo_(_aBlock);
		return this;
	}

	@Override
	public GlobalReadNode withAllNodesDo_pruneWhere_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock, final st.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		_aBlock.value_(this);
		this.allNodesDo_pruneWhere_(_aBlock, _pruneBlock);
		return this;
	}

	@Override
	public GlobalReadNode withSourcePosition_(final SourcePosition _aSourcePosition) {
		if (_sourcePosition == _aSourcePosition) {
			return GlobalReadNode.this;
		}
		return this.copy().pvtSetSourcePosition_(_aSourcePosition);
	}
}
