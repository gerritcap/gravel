package st.gravel.support.compiler.jvm;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.jvm.JVMPrimitiveType;
import st.gravel.support.compiler.jvm.JVMPrimitiveType.JVMPrimitiveType_Factory;
import st.gravel.support.compiler.jvm.JVMNodeVisitor;
import st.gravel.support.compiler.jvm.JVMType;
import st.gravel.support.compiler.jvm.CastObjectToBoolean;
import st.gravel.support.compiler.jvm.CastTo;

public class JVMBooleanType extends JVMPrimitiveType implements Cloneable {

	public static JVMBooleanType_Factory factory = new JVMBooleanType_Factory();

	public static class JVMBooleanType_Factory extends JVMPrimitiveType_Factory {

		public JVMBooleanType basicNew() {
			JVMBooleanType newInstance = new JVMBooleanType();
			newInstance.initialize();
			return newInstance;
		}
	}

	@Override
	public <X> X accept_(final JVMNodeVisitor<X> _visitor) {
		return _visitor.visitJVMBooleanType_(this);
	}

	@Override
	public JVMBooleanType commonSuperTypeWithBoolean_(final JVMBooleanType _aJVMBooleanType) {
		return this;
	}

	@Override
	public JVMType commonSuperTypeWith_(final JVMType _aJVMType) {
		return _aJVMType.commonSuperTypeWithBoolean_(this);
	}

	public JVMBooleanType copy() {
		try {
			JVMBooleanType _temp1 = (JVMBooleanType) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	@Override
	public JVMBooleanType descriptorOn_(final StringBuilder _aStream) {
		this.sourceOn_(_aStream);
		return this;
	}

	public JVMBooleanType_Factory factory() {
		return factory;
	}

	@Override
	public boolean isBooleanType() {
		return true;
	}

	@Override
	public CastObjectToBoolean newCastInstructionFromDynamicObject() {
		return CastObjectToBoolean.factory.basicNew();
	}

	@Override
	public CastTo newCastInstructionTo_(final JVMType _aJVMType) {
		return _aJVMType.newCastInstructionFromBoolean();
	}

	@Override
	public JVMBooleanType printOn_(final StringBuilder _aStream) {
		this.sourceOn_(_aStream);
		return this;
	}

	@Override
	public JVMBooleanType sourceOn_(final StringBuilder _aStream) {
		_aStream.append('Z');
		return this;
	}
}
