package st.gravel.support.compiler.ast;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.ast.VariableScopeAnalyzerState;
import st.gravel.support.compiler.ast.VariableScopeAnalyzerState.VariableScopeAnalyzerState_Factory;
import st.gravel.support.compiler.ast.VariableScopeAnalyzerStateWritten;

public class VariableScopeAnalyzerStateDefined extends VariableScopeAnalyzerState implements Cloneable {

	public static VariableScopeAnalyzerStateDefined_Factory factory = new VariableScopeAnalyzerStateDefined_Factory();

	public static class VariableScopeAnalyzerStateDefined_Factory extends VariableScopeAnalyzerState_Factory {

		public VariableScopeAnalyzerStateDefined basicNew() {
			VariableScopeAnalyzerStateDefined newInstance = new VariableScopeAnalyzerStateDefined();
			newInstance.initialize();
			return newInstance;
		}
	}

	public VariableScopeAnalyzerStateDefined copy() {
		try {
			VariableScopeAnalyzerStateDefined _temp1 = (VariableScopeAnalyzerStateDefined) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public VariableScopeAnalyzerStateDefined_Factory factory() {
		return factory;
	}

	@Override
	public VariableScopeAnalyzerState withLocalWrite() {
		return VariableScopeAnalyzerStateWritten.factory.basicNew();
	}
}
