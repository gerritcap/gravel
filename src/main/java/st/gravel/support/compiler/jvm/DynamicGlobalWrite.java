package st.gravel.support.compiler.jvm;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.jvm.JVMInstruction;
import st.gravel.support.compiler.jvm.JVMInstruction.JVMInstruction_Factory;
import st.gravel.support.compiler.jvm.JVMInstructionVisitor;
import st.gravel.support.compiler.jvm.JVMStack;
import st.gravel.support.compiler.jvm.JVMMethodType;
import st.gravel.support.compiler.jvm.JVMType;
import st.gravel.support.compiler.jvm.JVMVoidType;

public class DynamicGlobalWrite extends JVMInstruction implements Cloneable {

	public static DynamicGlobalWrite_Factory factory = new DynamicGlobalWrite_Factory();

	String _name;

	String _namespace;

	public static class DynamicGlobalWrite_Factory extends JVMInstruction_Factory {

		public DynamicGlobalWrite basicNew() {
			DynamicGlobalWrite newInstance = new DynamicGlobalWrite();
			newInstance.initialize();
			return newInstance;
		}

		public DynamicGlobalWrite namespace_name_(final String _aString, final String _aString2) {
			return this.basicNew().initializeNamespace_name_(_aString, _aString2);
		}
	}

	static public DynamicGlobalWrite _namespace_name_(Object receiver, final String _aString, final String _aString2) {
		return factory.namespace_name_(_aString, _aString2);
	}

	@Override
	public <X> X accept_(final JVMInstructionVisitor<X> _visitor) {
		return _visitor.visitDynamicGlobalWrite_(this);
	}

	public DynamicGlobalWrite copy() {
		try {
			DynamicGlobalWrite _temp1 = (DynamicGlobalWrite) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	@Override
	public JVMInstruction effectStack_(final JVMStack _aJVMStack) {
		return this;
	}

	public DynamicGlobalWrite_Factory factory() {
		return factory;
	}

	public DynamicGlobalWrite initializeNamespace_name_(final String _aString, final String _aString2) {
		_namespace = _aString;
		_name = _aString2;
		this.initialize();
		return this;
	}

	public JVMMethodType methodType() {
		return JVMMethodType.factory.dynamic_(1);
	}

	public String name() {
		return _name;
	}

	public String namespace() {
		return _namespace;
	}

	@Override
	public DynamicGlobalWrite printOn_(final StringBuilder _aStream) {
		final String _title;
		_title = this.factory().toString();
		_aStream.append(st.gravel.support.jvm.CharacterExtensions.isVowel(_title.charAt(0)) ? "an " : "a ");
		_aStream.append(_title);
		_aStream.append('[');
		this.sourceOn_(_aStream);
		_aStream.append(']');
		return this;
	}

	@Override
	public DynamicGlobalWrite sourceOn_(final StringBuilder _aStream) {
		return this;
	}

	@Override
	public JVMType type() {
		return JVMVoidType.factory.basicNew();
	}

	@Override
	public DynamicGlobalWrite withReturnType_(final JVMType _aType) {
		if (st.gravel.support.jvm.ObjectExtensions.equals_(this.type(), _aType)) {
			return DynamicGlobalWrite.this;
		}
		throw new RuntimeException("niy");
	}
}
