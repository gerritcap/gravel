package st.gravel.support.compiler.ast;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.ast.ArrayAccessNode;
import st.gravel.support.compiler.ast.ArrayAccessNode.ArrayAccessNode_Factory;
import st.gravel.support.compiler.ast.Expression;
import st.gravel.support.compiler.ast.NodeVisitor;
import st.gravel.support.compiler.ast.Node;
import st.gravel.support.compiler.ast.SourcePrinter;
import st.gravel.support.compiler.ast.SourcePosition;

public class ArrayAtNode extends ArrayAccessNode implements Cloneable {

	public static ArrayAtNode_Factory factory = new ArrayAtNode_Factory();

	Expression _index;

	public static class ArrayAtNode_Factory extends ArrayAccessNode_Factory {

		public ArrayAtNode basicNew() {
			ArrayAtNode newInstance = new ArrayAtNode();
			newInstance.initialize();
			return newInstance;
		}

		@Override
		public ArrayAtNode receiver_(final Expression _anExpression) {
			return ((ArrayAtNode) this.basicNew().initializeReceiver_(_anExpression));
		}

		public ArrayAtNode receiver_index_(final Expression _anExpression, final Expression _anExpression2) {
			return this.basicNew().initializeReceiver_index_(_anExpression, _anExpression2);
		}
	}

	static public ArrayAtNode _receiver_(Object receiver, final Expression _anExpression) {
		return factory.receiver_(_anExpression);
	}

	static public ArrayAtNode _receiver_index_(Object receiver, final Expression _anExpression, final Expression _anExpression2) {
		return factory.receiver_index_(_anExpression, _anExpression2);
	}

	@Override
	public <X> X accept_(final NodeVisitor<X> _visitor) {
		return _visitor.visitArrayAtNode_(this);
	}

	@Override
	public ArrayAtNode allNodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		this.nodesDo_(new st.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				return _each.withAllNodesDo_(_aBlock);
			}
		});
		return this;
	}

	@Override
	public ArrayAtNode allNodesDo_pruneWhere_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock, final st.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		this.nodesDo_(new st.gravel.support.jvm.Block1<Object, Node>() {

			@Override
			public Object value_(final Node _each) {
				if (!_pruneBlock.value_(_each)) {
					return _each.withAllNodesDo_pruneWhere_(_aBlock, _pruneBlock);
				}
				return ArrayAtNode.this;
			}
		});
		return this;
	}

	public ArrayAtNode copy() {
		try {
			ArrayAtNode _temp1 = (ArrayAtNode) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	public ArrayAtNode_Factory factory() {
		return factory;
	}

	public Expression index() {
		return _index;
	}

	@Override
	public ArrayAtNode initializeReceiver_(final Expression _anExpression) {
		_receiver = _anExpression;
		this.initialize();
		return this;
	}

	public ArrayAtNode initializeReceiver_index_(final Expression _anExpression, final Expression _anExpression2) {
		_receiver = _anExpression;
		_index = _anExpression2;
		this.initialize();
		return this;
	}

	@Override
	public ArrayAtNode innerSourceOn_(final StringBuilder _aStream) {
		_aStream.append("{");
		_receiver.sourceOn_(_aStream);
		_aStream.append(" at: ");
		_index.sourceOn_(_aStream);
		_aStream.append("}");
		return this;
	}

	@Override
	public ArrayAtNode localVarNamesDo_(final st.gravel.support.jvm.Block1<Object, String> _aBlock) {
		return this;
	}

	@Override
	public ArrayAtNode nodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		_aBlock.value_(_receiver);
		_aBlock.value_(_index);
		return this;
	}

	@Override
	public ArrayAtNode prettySourceOn_(final StringBuilder _aStream) {
		SourcePrinter.factory.on_(_aStream).visit_(this);
		return this;
	}

	@Override
	public ArrayAtNode printOn_(final StringBuilder _aStream) {
		final String _title;
		_title = this.factory().toString();
		_aStream.append(st.gravel.support.jvm.CharacterExtensions.isVowel(_title.charAt(0)) ? "an " : "a ");
		_aStream.append(_title);
		_aStream.append('[');
		this.sourceOn_(_aStream);
		_aStream.append(']');
		return this;
	}

	@Override
	public ArrayAtNode pvtSetSourcePosition_(final SourcePosition _aSourcePosition) {
		_sourcePosition = _aSourcePosition;
		return this;
	}

	@Override
	public Expression receiver() {
		return _receiver;
	}

	@Override
	public ArrayAtNode sourceOn_(final StringBuilder _aStream) {
		this.innerSourceOn_(_aStream);
		return this;
	}

	@Override
	public Expression unoptimized() {
		return _receiver.send_with_("at:", _index);
	}

	@Override
	public ArrayAtNode withAllNodesDo_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock) {
		_aBlock.value_(this);
		this.allNodesDo_(_aBlock);
		return this;
	}

	@Override
	public ArrayAtNode withAllNodesDo_pruneWhere_(final st.gravel.support.jvm.Block1<Object, Node> _aBlock, final st.gravel.support.jvm.Block1<Boolean, Node> _pruneBlock) {
		_aBlock.value_(this);
		this.allNodesDo_pruneWhere_(_aBlock, _pruneBlock);
		return this;
	}

	@Override
	public ArrayAtNode withSourcePosition_(final SourcePosition _aSourcePosition) {
		if (_sourcePosition == _aSourcePosition) {
			return ArrayAtNode.this;
		}
		return this.copy().pvtSetSourcePosition_(_aSourcePosition);
	}
}
