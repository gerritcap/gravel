package st.gravel.support.compiler.jvm;

/*
	This file is automatically generated from typed smalltalk source. Do not edit by hand.
	(C) AG5.com
*/

import java.math.BigInteger;
import st.gravel.support.jvm.NonLocalReturn;
import st.gravel.support.compiler.jvm.JVMType;
import st.gravel.support.compiler.jvm.JVMType.JVMType_Factory;

abstract public class JVMNonPrimitiveType extends JVMType implements Cloneable {

	public static JVMNonPrimitiveType_Factory factory = new JVMNonPrimitiveType_Factory();

	public static class JVMNonPrimitiveType_Factory extends JVMType_Factory {

		public JVMNonPrimitiveType basicNew() {
			throw new RuntimeException("JVMNonPrimitiveType is an abstract class");
		}
	}

	public abstract String className();

	public JVMNonPrimitiveType copy() {
		try {
			JVMNonPrimitiveType _temp1 = (JVMNonPrimitiveType) this.clone();
			_temp1.postCopy();
			return _temp1;
		} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e);
		}
	}

	@Override
	public JVMNonPrimitiveType descriptorOn_(final StringBuilder _aStream) {
		return this;
	}

	public abstract String dottedClassName();

	public JVMNonPrimitiveType_Factory factory() {
		return factory;
	}

	@Override
	public JVMNonPrimitiveType printOn_(final StringBuilder _aStream) {
		this.sourceOn_(_aStream);
		return this;
	}

	@Override
	public JVMNonPrimitiveType sourceOn_(final StringBuilder _aStream) {
		_aStream.append(st.gravel.core.Symbol.value(this.getClass().getSimpleName()));
		return this;
	}
}
